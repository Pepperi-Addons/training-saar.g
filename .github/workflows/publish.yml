name: PublishAddon

on:
  push:
    branches:
      - 'release/**'


      
jobs:
  enforce-version:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      
    - name: Move to branch
      run: git checkout $GITHUB_REF
      
    - name: Extract version from branch name
      run: |
          mmajor_version=$(echo $GITHUB_REF | cut -d '/' -f 2 | cut -d '.' -f 1)
          minor_version=$(echo $GITHUB_REF | cut -d '/' -f 2 | cut -d '.' -f 2)
          branch_version="$major_version.$minor_version"
          echo "branch_version: $branch_version"
          echo "::set-env name=branch_version::$branch_version"

    - name: Install jq
      uses: actions/setup-node@v2
      with:
        node-version: '12.x'
        package-manager: 'npm'
        packages: 'jq'
    - name: Extract majorVersion.minorVersion from version
      run: |
        json_version=$(jq -r '.Version' addon.config.json)
        json_major_minor_version=$(echo $json_version | cut -d '.' -f 1-2)
        echo "json_major_minor_version: $json_major_minor_version"
        echo "::set-env name=json_major_minor_version::$json_major_minor_version"
        
    - name: Should update version in json?
      run: |
        should_update_json_version = "$json_major_minor_version" != "$branch_version"
        echo "should_update_json_version: $should_update_json_version"
        echo "::set-env name=should_update_json_version::$should_update_json_version"
    - name: Update json version
      if: ${{ env.should_update_json_version }}
      run: |
        jq --arg Version "$branch_version" '.Version=$branch_version | .0' addon.config.json
        
    - name: Commit and push changes
      if: ${{ env.should_update_json_version }}
      run: |
        git add addon.config.json
        git commit -m "Update version and build number in JSON file"
        git push
  

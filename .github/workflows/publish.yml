name: PublishAddon

on:
  push:
    branches:
      - 'release/**'


      
jobs:
  enforce-version:
    runs-on: ubuntu-latest
    
      
    steps:
    - name: Setup GIT
      run: git config --global user.email "action@github.com" && git config --global user.name "GitHub Action"
      
    - name: Checkout repository
      uses: actions/checkout@v2
      
    - name: Move to branch
      run: git checkout $GITHUB_REF
      
    - name: Extract version from branch name
      run: |
          echo "echo $GITHUB_REF"
          branch_version=$(echo $GITHUB_REF | cut -d '/' -f 4)
          echo "branch_version: $branch_version"
          echo "branch_version=$branch_version" >> $GITHUB_ENV
    - name: Install jq
      uses: actions/setup-node@v2
      with:
        node-version: '12.x'
        package-manager: 'npm'
        packages: 'jq'
    - name: Extract majorVersion.minorVersion from version
      run: |
        json_version_entire_version=$(jq -r '.AddonVersion' addon.config.json)
        json_version=$(echo $json_version_entire_version | cut -d '.' -f 1-2)
        echo "json_version: $json_version"
        echo "json_version=$json_version" >> $GITHUB_ENV
        
    - name: Should update version in json?
      run: |
        echo "should_update_json_version: ${{ env.json_version != env.branch_version }}"
        echo "should_update_json_version=${{ env.json_version != env.branch_version }}" >> $GITHUB_ENV
        
    - name: Update json version
      if: ${{ env.should_update_json_version }}
      run: |
        jq '.AddonVersion = "${{ env.branch_version }}.0"' addon.config.json > temp.json
        mv temp.json addon.config.json
        
    - name: Commit and push changes
      if: ${{ env.should_update_json_version }}
      run: |
        git add addon.config.json
        git commit -m "Update version and build number in JSON file"
        git push
